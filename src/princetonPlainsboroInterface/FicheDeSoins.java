/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package princetonPlainsboroInterface;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import princetonPlainsboro.*;

/**
 *
 * @author Manounette
 */
public class FicheDeSoins extends javax.swing.JFrame {

    private DossierMedical dm;
    private NouvelleAdmission na;
    private ListeMedecinMedical lmm;
    private FicheDeSoins fds;
    private MenuMedical mm;
    private Patient p;
    private Medecin m;
    private String l;
    private String c;
    private princetonPlainsboro.FicheDeSoins f;
    DefaultListModel<princetonPlainsboro.FicheDeSoins> fichesP = new DefaultListModel();

    private ComboBoxListener cbl;
    private FicheDeSoinsListener fdsl;

    /**
     * Creates new form FicheDeSoins
     */
    public FicheDeSoins() {
        initComponents();
        setLocationRelativeTo(getParent());
        fdsl = new FicheDeSoinsListener();
        cbl = new ComboBoxListener();
        jButton1.addActionListener(fdsl);
        jButton2.addActionListener(fdsl);
        jButton3.addActionListener(fdsl);
        jButton4.addActionListener(fdsl);
        jButton5.addActionListener(fdsl);
        jButton6.addActionListener(fdsl);
        jComboBox1.addActionListener(cbl);
        jComboBox2.addActionListener(cbl);
    }

    public DossierMedical getDM() {
        return dm;
    }

    public void setDM(DossierMedical dm) {
        this.dm = dm;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox();
        jButton6 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setForeground(new java.awt.Color(153, 153, 255));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(153, 153, 255));
        jButton1.setText("Retour Menu");

        jButton2.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jButton2.setText("Liste des Patients");

        jButton3.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jButton3.setText("Fiches de Soins");

        jButton4.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jButton4.setText("Liste des Médecins");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jButton2)
                .addGap(16, 16, 16)
                .addComponent(jButton3)
                .addGap(16, 16, 16)
                .addComponent(jButton4)
                .addGap(0, 291, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setBackground(new java.awt.Color(153, 153, 255));
        jLabel1.setFont(new java.awt.Font("Calibri", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 51));
        jLabel1.setText("Fiches de Soins");

        jLabel2.setBackground(new java.awt.Color(153, 153, 255));
        jLabel2.setFont(new java.awt.Font("Calibri", 1, 40)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 51));
        jLabel2.setText("MT²");

        jButton5.setBackground(new java.awt.Color(0, 153, 51));
        jButton5.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(51, 51, 51));
        jButton5.setText("Ajouter Fiche");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jComboBox1.setBackground(new java.awt.Color(0, 153, 51));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));

        jButton6.setBackground(new java.awt.Color(0, 153, 51));
        jButton6.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(51, 51, 51));
        jButton6.setText("Supprimer Fiche");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel3.setText("Patient : ");

        jComboBox2.setBackground(new java.awt.Color(0, 153, 51));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sans tri", "Dates croissantes", "Coûts croissants", "Entre deux dates" }));

        jLabel4.setText("Trier :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, 0, 190, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        jSplitPane1.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FicheDeSoins.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FicheDeSoins.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FicheDeSoins.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FicheDeSoins.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FicheDeSoins().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    public JComboBox getJComboBox1() {
        return jComboBox1;
    }

    public JComboBox getJComboBox2() {
        return jComboBox2;
    }

    public JTextArea getJTextArea1() {
        return jTextArea1;
    }

    public void ajouterFiche() {
        final JComboBox cb1;
        final JComboBox cb2;
        final JButton newPatient;
        final princetonPlainsboro.FicheDeSoins f;

        DefaultComboBoxModel cbModel1 = new DefaultComboBoxModel(dm.getMedecins().toArray());
        cb1 = new JComboBox();
        DefaultComboBoxModel cbModel2 = new DefaultComboBoxModel(dm.getPatients().toArray());
        cb2 = new JComboBox();;
        newPatient = new JButton("Nouveau Patient");

        //creation des JTextFields pour récupérer les renseignements du patient et du JPanel        
        final JTextField fieldPrenom = new JTextField(5);
        final JTextField fieldNom = new JTextField(7);
        final JTextField fieldBirth1 = new JTextField(3);
        final JTextField fieldBirth2 = new JTextField(3);
        final JTextField fieldBirth3 = new JTextField(7);
        final JTextField fieldNumSecu = new JTextField(5);
        final JTextField fieldAdresse = new JTextField(10);

        //listeners
        ActionListener cbListener = new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                JComboBox cb = (JComboBox) e.getSource();
                if (cb == cb1) {
                    for (int i = 0; i < dm.getMedecins().size(); i++) {
                        if (cb.getSelectedItem().equals(dm.getMedecins().get(i))) {
                            m = dm.getMedecins().get(i);
                        }
                    }
                } else if (cb == cb2) {
                    for (int i = 0; i < dm.getPatients().size(); i++) {
                        if (cb.getSelectedItem().equals(dm.getPatients().get(i))) {
                            p = dm.getPatients().get(i);
                        }
                    }
                }
            }
        };

        ActionListener buttonListener = new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                JButton source = (JButton) e.getSource();
                if (source == newPatient) {
                    //création des JLabels
                    JLabel labelNom = new JLabel("Nom :");
                    JLabel labelPrenom = new JLabel("Prénom :");
                    JLabel labelBirth = new JLabel("Date de naissance :");
                    JLabel labelAdresse = new JLabel("Adresse :");
                    JLabel labelNumSecu = new JLabel("Numéro de sécurité sociale (13 chiffres) :");
                    //création du JPanel
                    JPanel panel3 = new JPanel();
                    //création d'un panel pour les 3 JTextField de la date de naissance
                    JPanel panelBirth = new JPanel();
                    panelBirth.setLayout(new FlowLayout());
                    panelBirth.add(fieldBirth1);
                    panelBirth.add(fieldBirth2);
                    panelBirth.add(fieldBirth3);
                    //organisation de la fenêtre d'entrée utilisateur
                    panel3.setLayout(new GridLayout(5, 2));
                    panel3.add(labelNom);
                    panel3.add(fieldNom);
                    panel3.add(labelPrenom);
                    panel3.add(fieldPrenom);
                    panel3.add(labelBirth);
                    panel3.add(panelBirth);
                    panel3.add(labelAdresse);
                    panel3.add(fieldAdresse);
                    panel3.add(labelNumSecu);
                    panel3.add(fieldNumSecu);

                    //instanciation de la fenêtre d'entrée utilisateur
                    int result = JOptionPane.showConfirmDialog(null, panel3,
                            "Veuillez entrer les détails de la fiche de soins :", JOptionPane.OK_CANCEL_OPTION);
                    if (result == JOptionPane.OK_OPTION) {
                        p = new Patient(fieldNom.getText(), fieldPrenom.getText(), new Date(Integer.parseInt(fieldBirth1.getText()), Integer.parseInt(fieldBirth2.getText()), Integer.parseInt(fieldBirth3.getText())), Long.parseLong(fieldNumSecu.getText()), fieldAdresse.getText());
                        dm.ajouterPatient(p);
                        DefaultComboBoxModel cbModel3 = new DefaultComboBoxModel(dm.getPatients().toArray());
                        cb2.setModel(cbModel3);
                    }
                }
            }
        };

        cb1.addActionListener(cbListener);
        cb2.addActionListener(cbListener);
        newPatient.addActionListener(buttonListener);

        cb1.setModel(cbModel1);
        cb2.setModel(cbModel2);
        cb1.setSelectedItem(dm.getMedecins().get(0));
        cb2.setSelectedItem(dm.getPatients().get(0));

        //panel global
        JPanel panelGlobal = new JPanel();

        //panel médecin
        JPanel panel1 = new JPanel();
        panel1.setLayout(new FlowLayout());
        JLabel labelMedecin = new JLabel("Médecin : ");
        panel1.add(labelMedecin);
        panel1.add(cb1);

        //panel date
        JPanel panel2 = new JPanel();
        panel2.setLayout(new FlowLayout());
        JLabel labelDate = new JLabel("Date : ");
        JTextField fieldJour = new JTextField(3);
        JTextField fieldMois = new JTextField(3);
        JTextField fieldAnnee = new JTextField(7);
        panel2.add(labelDate);
        panel2.add(fieldJour);
        panel2.add(fieldMois);
        panel2.add(fieldAnnee);

        //panel patient        
        JPanel panel4 = new JPanel();
        panel4.setLayout(new BorderLayout());
        JLabel labelPatient = new JLabel("Patient : ");
        panel4.add(labelPatient, BorderLayout.LINE_START);
        panel4.add(cb2, BorderLayout.CENTER);
        panel4.add(newPatient, BorderLayout.PAGE_END);

        //organisation panelGlobal
        panelGlobal.setLayout(new BorderLayout());
        panelGlobal.add(panel1, BorderLayout.PAGE_START);
        panelGlobal.add(panel2, BorderLayout.CENTER);
        panelGlobal.add(panel4, BorderLayout.PAGE_END);

        //instanciation de la fenêtre d'entrée utilisateur
        int result = JOptionPane.showConfirmDialog(null, panelGlobal,
                "Veuillez entrer les détails de la fiche de soins :", JOptionPane.OK_CANCEL_OPTION);

        Date date = new Date(Integer.parseInt(fieldJour.getText()), Integer.parseInt(fieldMois.getText()), Integer.parseInt(fieldAnnee.getText()));

        f = new princetonPlainsboro.FicheDeSoins(p, m, date);

        if (result == JOptionPane.OK_OPTION) {
            dm.ajouterFiche(f);
            //panel global
            JPanel panelGlobal2 = new JPanel();

            //TextField permettant de recuperer la date pour l'acte a créer
            JTextField fieldDateDay = new JTextField(3);
            JTextField fieldDateMonth = new JTextField(3);
            JTextField fieldDateYear = new JTextField(7);

            //ComboBox  permettant de choisir dans la liste des libelles/des medecins
            final JComboBox comboLibelle;
            DecimalFormat dec = new DecimalFormat("0.00");

            DefaultComboBoxModel cbModel = new DefaultComboBoxModel(dm.getLibelles().toArray());
            comboLibelle = new JComboBox(cbModel);
            comboLibelle.setSelectedItem(dm.getLibelles().get(0));

            ActionListener cbListener1 = new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    JComboBox cb = (JComboBox) e.getSource();
                    if (cb == comboLibelle) {
                        for (int i = 0; i < dm.getLibelles().size(); i++) {
                            if (cb.getSelectedItem().equals(dm.getLibelles().get(i))) {
                                l = dm.getLibelles().get(i).toString();
                            }
                        }
                        if (l.equals("consultation au cabinet")) {
                            c = "CS";
                        } else if (l.equals("consultation cardiologie")) {
                            c = "CSC";
                        } else if (l.equals("forfait pediatrique")) {
                            c = "FP";
                        } else if (l.equals("actes de chirurgie et de specialite")) {
                            c = "KC";
                        } else if (l.equals("actes d'echographie, de doppler")) {
                            c = "KE";
                        } else if (l.equals("autres actes de specialite")) {
                            c = "K";
                        } else if (l.equals("forfait A")) {
                            c = "KFA";
                        } else if (l.equals("forfait B")) {
                            c = "KFB";
                        } else if (l.equals("orthodontie")) {
                            c = "ORT";
                        } else if (l.equals("prothese dentaire")) {
                            c = "PRO";
                        }
                    }
                }

            };

            comboLibelle.addActionListener(cbListener1);

            //TextArea pour récupérer les observation éventuelle du medecin
            JTextArea areaObservation = new JTextArea();

            //création des JLabels            
            JLabel labelLibelle = new JLabel("Nom de l'acte :");
            JLabel labelObservation = new JLabel("Observation éventuelle :");

            //JLabel et JTextField
            JLabel labelCoef = new JLabel("Coefficient : ");
            JTextField fieldCoef = new JTextField(4);

            //organisation panelGlobal
            panelGlobal2.setLayout(
                    new GridLayout(3, 2));
            panelGlobal2.add(labelLibelle);

            panelGlobal2.add(comboLibelle);

            panelGlobal2.add(labelObservation);

            panelGlobal2.add(areaObservation);

            panelGlobal2.add(labelCoef);

            panelGlobal2.add(fieldCoef);

            Acte a = null;

            int result2 = JOptionPane.showConfirmDialog(this, panelGlobal2,
                    "Veuillez saisir les informations concernant l'acte médical :", JOptionPane.OK_CANCEL_OPTION);
            
            if (result2 == JOptionPane.OK_OPTION) {
                if (c.equals("CS")) {
                    a = new Acte(Code.CS, Integer.parseInt(fieldCoef.getText()), areaObservation.getText());
                } else if (c.equals("CSC")) {
                    a = new Acte(Code.CSC, Integer.parseInt(fieldCoef.getText()), areaObservation.getText());
                } else if (c.equals("FP")) {
                    a = new Acte(Code.FP, Integer.parseInt(fieldCoef.getText()), areaObservation.getText());
                } else if (c.equals("KC")) {
                    a = new Acte(Code.KC, Integer.parseInt(fieldCoef.getText()), areaObservation.getText());
                } else if (c.equals("KE")) {
                    a = new Acte(Code.KE, Integer.parseInt(fieldCoef.getText()), areaObservation.getText());
                } else if (c.equals("K")) {
                    a = new Acte(Code.K, Integer.parseInt(fieldCoef.getText()), areaObservation.getText());
                } else if (c.equals("KFA")) {
                    a = new Acte(Code.KFA, Integer.parseInt(fieldCoef.getText()), areaObservation.getText());
                } else if (c.equals("KFB")) {
                    a = new Acte(Code.KFB, Integer.parseInt(fieldCoef.getText()), areaObservation.getText());
                } else if (c.equals("ORT")) {
                    a = new Acte(Code.ORT, Integer.parseInt(fieldCoef.getText()), areaObservation.getText());
                } else if (c.equals("PRO")) {
                    a = new Acte(Code.PRO, Integer.parseInt(fieldCoef.getText()), areaObservation.getText());
                }
                f.ajouterActe(a);
            }
            jTextArea1.setText(dm.afficher());
            jTextArea1.repaint();
        }
    }

    public void supprimerFiche() {
        JPanel panel1 = new JPanel();
        JLabel labelPatient = new JLabel("Sélectionner le patient : ");
        DefaultComboBoxModel cbModel1 = new DefaultComboBoxModel(dm.getPatients().toArray());
        final JComboBox cb1 = new JComboBox(cbModel1);
        final JComboBox cb2 = new JComboBox();

        ActionListener cbListener = new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                JComboBox cb = (JComboBox) e.getSource();
                if (cb == cb1) {
                    for (int i = 0; i < dm.getPatients().size(); i++) {
                        if (cb.getSelectedItem().equals(dm.getPatients().get(i))) {
                            p = dm.getPatients().get(i);
                        }
                    }
                    for (int i = 0; i < dm.getFiches().size(); i++) {
                        if (p.equals(dm.getFiches().get(i).getPatient())) {
                            fichesP.addElement(dm.getFiches().get(i));
                        }
                    }
                    DefaultComboBoxModel cbModel2 = new DefaultComboBoxModel(fichesP.toArray());
                    cb2.setModel(cbModel2);
                } else if (cb == cb2) {
                    for (int i = 0; i < dm.getFiches().size(); i++) {
                        if (cb.getSelectedItem().equals(dm.getFiches().get(i))) {
                            f = dm.getFiches().get(i);
                        }
                    }
                }
            }
        };

        cb1.addActionListener(cbListener);
        cb2.addActionListener(cbListener);

        cb1.setModel(cbModel1);
        cb1.setSelectedItem(dm.getPatients().get(0));
        cb2.setSelectedItem(fichesP.get(0));

        panel1.add(labelPatient);
        panel1.add(cb1);

        int result = JOptionPane.showConfirmDialog(null, panel1,
                "Choix du patient", JOptionPane.OK_CANCEL_OPTION);

        JPanel panel2 = new JPanel();
        JLabel labelFiche = new JLabel("Sélectionner la fiche à supprimer : ");
        panel2.add(labelFiche);
        panel2.add(cb2);

        if (result == JOptionPane.OK_OPTION) {
            int result2 = JOptionPane.showConfirmDialog(null, panel2,
                    "Suppression de la fiche de soins", JOptionPane.OK_CANCEL_OPTION);
            if (result2 == JOptionPane.OK_OPTION) {
                for (int i = 0; i < dm.getFiches().size(); i++) {
                    if (f.equals(dm.getFiches().get(i))) {
                        dm.supprimerFiche(dm.getFiches().get(i));
                        getJTextArea1().setText(dm.afficher());
                        getJTextArea1().setCaretPosition(0);
                        getJTextArea1().repaint();
                    }
                }
            }
        }
    }

    public void afficherEntreDeuxDateBox() {
        //panel global
        JPanel panelGlobal = new JPanel();

        //TextField permettant de recuperer les deux dates d1 et d2
        JTextField fieldPremiereDateDay = new JTextField(3);
        JTextField fieldPremiereDateMonth = new JTextField(3);
        JTextField fieldPremiereDateYear = new JTextField(7);
        JTextField fieldDeuxiemeDateDay = new JTextField(3);
        JTextField fieldDeuxiemeDateMonth = new JTextField(3);
        JTextField fieldDeuxiemeDateYear = new JTextField(7);

        //création des JLabels
        JLabel labelDate1 = new JLabel("Première date :");
        JLabel labelDate2 = new JLabel("Deuxième date :");

        //création d'un panel pour les 3 JTextField de la première date
        JPanel panelDate1 = new JPanel();
        panelDate1.setLayout(new FlowLayout());
        panelDate1.add(fieldPremiereDateDay);
        panelDate1.add(fieldPremiereDateMonth);
        panelDate1.add(fieldPremiereDateYear);

        //création d'un panel pour les 3 JTextField de la deuxième date
        JPanel panelDate2 = new JPanel();
        panelDate2.setLayout(new FlowLayout());
        panelDate2.add(fieldDeuxiemeDateDay);
        panelDate2.add(fieldDeuxiemeDateMonth);
        panelDate2.add(fieldDeuxiemeDateYear);

        //organisation panelGlobal
        panelGlobal.setLayout(new GridLayout(4, 1));
        panelGlobal.add(labelDate1);
        panelGlobal.add(panelDate1);
        panelGlobal.add(labelDate2);
        panelGlobal.add(panelDate2);

        //instanciation de la fenêtre d'entrée utilisateur
        int result = JOptionPane.showConfirmDialog(null, panelGlobal,
                "Veuillez choisir les deux dates :", JOptionPane.OK_CANCEL_OPTION);
        Date d1 = null;
        Date d2 = null;
        d1 = new Date(Integer.parseInt(fieldPremiereDateDay.getText()), Integer.parseInt(fieldPremiereDateMonth.getText()), Integer.parseInt(fieldPremiereDateYear.getText()));
        d2 = new Date(Integer.parseInt(fieldDeuxiemeDateDay.getText()), Integer.parseInt(fieldDeuxiemeDateMonth.getText()), Integer.parseInt(fieldDeuxiemeDateYear.getText()));
        if (result == JOptionPane.OK_OPTION) {
            jTextArea1.setText(dm.afficherFichesEntre(d1, d2));
        }
    }

    public class FicheDeSoinsListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            Object source = e.getSource();
            Rectangle positionFenetre = getBounds();

            if (source == jButton1) {
                mm = new MenuMedical();
                mm.setBounds(positionFenetre);
                mm.setDM(dm);
                mm.setVisible(true);
                setVisible(false);
            } else if (source == jButton2) {
                na = new NouvelleAdmission();
                na.setBounds(positionFenetre);
                na.setDM(dm);
                na.getJList3().setModel(dm.getPatients());
                DefaultComboBoxModel cbModel = new DefaultComboBoxModel(dm.getMedecins().toArray());
                na.getJComboBox2().setModel(cbModel);
                na.setVisible(true);
                setVisible(false);
            } else if (source == jButton3) {
                fds = new FicheDeSoins();
                fds.setBounds(positionFenetre);
                fds.setDM(dm);
                fds.getJTextArea1().setText(dm.afficher());
                fds.getJTextArea1().setCaretPosition(0);
                DefaultComboBoxModel cbModel = new DefaultComboBoxModel(dm.getPatients().toArray());
                fds.getJComboBox1().setModel(cbModel);
                fds.setVisible(true);
                setVisible(false);
            } else if (source == jButton4) {
                lmm = new ListeMedecinMedical();
                lmm.setBounds(positionFenetre);
                lmm.setDM(dm);
                lmm.getJList1().setModel(dm.getMedecins());
                lmm.setVisible(true);
                setVisible(false);
            } else if (source == jButton5) {
                //méthode ajouterFiche(FicheDeSoins fds); de DossierMedical
                ajouterFiche();
                repaint();
            } else if (source == jButton6) {
                supprimerFiche();
                repaint();
            }
        }
    }

    public class ComboBoxListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            String s = "";
            JComboBox cb = (JComboBox) e.getSource();
            Rectangle positionFenetre = getBounds();
            if (cb == jComboBox1) {
                for (int i = 0; i < dm.getFiches().size(); i++) {
                    if (cb.getSelectedItem().equals(dm.getFiches().get(i).getPatient())) {
                        s += dm.getFiches().get(i).afficher();
                    }
                }
                jTextArea1.setText(s);
                jTextArea1.repaint();
            } else if (cb == jComboBox2) {

                if (cb.getSelectedItem().equals("Sans tri")) {
                    fds = new FicheDeSoins();
                    fds.setBounds(positionFenetre);
                    fds.setDM(dm);
                    fds.getJTextArea1().setText(dm.afficher());
                    fds.getJTextArea1().setCaretPosition(0);
                    DefaultComboBoxModel cbModel = new DefaultComboBoxModel(dm.getPatients().toArray());
                    fds.getJComboBox1().setModel(cbModel);
                    fds.setVisible(true);
                    setVisible(false);

                } else if (cb.getSelectedItem().equals("Dates croissantes")) {
                    s += dm.trierDates();
                    jTextArea1.setText(s);
                } else if (cb.getSelectedItem().equals("Coûts croissants")) {
                    s += dm.afficherListeCoutCroissant();
                    jTextArea1.setText(s);
                } else if (cb.getSelectedItem().equals("Entre deux dates")) {
                    afficherEntreDeuxDateBox();
                }
                jTextArea1.setCaretPosition(0);
                jTextArea1.repaint();
            }

        }
    }
}
